/* Перечислите все проблемы, которые вы видите в данном коде: */

class Foo
{
public:
    Foo(int j) { i=new int[j]; }
    ~Foo() { delete i; }
private:
    int* i;
};

class Bar: Foo
{
public:
    Bar(int j) { i=new char[j]; }
    ~Bar() { delete i; }
private:
    char* i;
};


void main()
{
    Foo* f=new Foo(100);
    Foo* b=new Bar(200);
    *f=*b;
    delete f;
    delete b;
}
/*
Проблемы, которые я здесь вижу:
Класс Foo:
Деструктор не виртуальный, также в деструкторе необходимо использовать delete[] поскольку в конструкторе мы создаем массив.
Класс Bar:
В определении класса Bar пропущено слово public – class Bar: public Foo.
В конструкторе не передаются аргументы базовому классу. Необходимо создать в базовом классе конструктор по умолчанию Foo(). Также необходимо использовать delete[] вместо delete.
Функция main:
Функция должна иметь возвращаемое значение int. При операции *f=*b поведение неопределенно, так лучше не делать.
*/
